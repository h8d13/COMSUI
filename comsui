#!/bin/bash
# App configuration
APP=${APP:-comsui}

# Import all libraries
if [ -f "$(dirname "$0")/${APP}-lib/struct" ]; then
    . "$(dirname "$0")/${APP}-lib/struct"
else
    . "$(dirname "$0")/lib/struct"
fi

comsui() {

  while [[ $# -gt 0 ]]; do
    case $1 in
      -l)
        ext_desc=true
        shift
        ;;
      -c)
        c_desc="$2"
        shift 2
        ;;
      -s)
        git -c advice.statusHints=false status
        return 0
        ;;
      -t|-f|-p|-d)
        # These are handled by sync script, just consume and continue
        shift
        ;;
      *)
        die "Unknown option: $1 Usage: comsui [-t][-l] [-c \"custom description\"] [-p] [-s] [-f]"
        ;;
    esac
  done

  block --die "which git || echo 'Git not found'"

  # Check if we're in a git repository
  if ! g_check; then
    die "Error: Not in a git repository"
  fi

  # always add from . first
  block --gitop "g_add"
    # Check if there's anything to commit
  if block --quiet "g_staged"; then
    exit 1
  fi

  g_status # to show info

  if f_no "$count_f"; then
    echo "0" > "$count_f"
  fi
  count=$(f_read "$count_f" "0")
  # Ensure count is a number
  count=$(n_safe "$count")

  # Capture useful info if extended description needed
  if s_true "$ext_desc"; then
    last_commit=$(g_last)
    last_commit_time=$(g_last)
  fi

  msg="$randid $(date "+%H:%M") #$(n_pad $count)"

  if s_set "$c_desc"; then
    msg="$msg

feat: $c_desc"
  fi

  # If -l option, add extended description
  if s_true "$ext_desc"; then
    ext_body="

Last commit: $last_commit ($last_commit_time)"
    msg="$msg$ext_body"
  fi

  # Example r_upgrade usage:
  #r_upgrade "user"     # Ensures running as regular user
  #r_upgrade "clear"    # Clears sudo cache for security and reprompts
  #r_upgrade "admin" sh -c 'echo $(whoami)'  # Ensures sudo available for admin tasks adn wraps command with sudo
  atom "Disk space check" "df -h | grep '/home'"

  #block --die "which node && echo 'Node found'"
  #block --die "which npm && npm --version"
  #block --warn "pgrep -f 'your-app-name' || echo 'Process not found'"
  #block --warn "pgrep -f 'codium' || echo 'No codium processes found'"
  #block --die "pgrep -f 'codium' | xargs -r kill -TERM || echo 'Nothing to kill'

  if u_confirm "Commit and push to $(g_upstream)?"; then
    if block --gitop "git commit -m \"$msg\""; then
      if block --gitop "git push $(g_remote) $(g_branch)"; then
        # Increment count and write back to file
        count=$((count + 1))
        echo "$count" > "$count_f"
        info "Count incremented to $count"
      else
        die "Git push failed, count not incremented."
      fi
    else
      die "Git commit failed, count not incremented."
    fi
  else
    info "Aborted."
  fi
}

$APP "$@"
