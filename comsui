#!/bin/bash
# App configuration
APP=${APP:-comsui}

# Load utils first
if [ -f "$(dirname "$0")/${APP}-lib/utils" ]; then
    . "$(dirname "$0")/${APP}-lib/utils"
else
    . "$(dirname "$0")/lib/utils"
fi

# . colors from appropriate locations
if f_ex "$(dirname "$0")/${APP}-lib/colors"; then
    . "$(dirname "$0")/${APP}-lib/colors"
    . "$(dirname "$0")/${APP}-lib/sync"
    . "$(dirname "$0")/${APP}-lib/block"
else
    . "$(dirname "$0")/lib/colors"
    . "$(dirname "$0")/lib/sync"
    . "$(dirname "$0")/lib/block"
fi

comsui() {

  # Check for options
  extended_desc=""
  custom_desc=""

  while [[ $# -gt 0 ]]; do
    case $1 in
      -l)
        extended_desc=true
        shift
        ;;
      -c)
        custom_desc="$2"
        shift 2
        ;;
      -s)
        git -c advice.statusHints=false status
        return 0
        ;;
      -t|-f|-p|-d)
        # These are handled by sync script, just consume and continue
        shift
        ;;
      *)
        die "Unknown option: $1
Usage: comsui [-t][-l] [-c \"custom description\"] [-p] [-s] [-f]"
        ;;
    esac
  done

  block --die "which git || echo 'Git not found'"

  # Check if we're in a git repository
  if ! git rev-parse --git-dir >/dev/null 2>&1; then
    die "Error: Not in a git repository"
  fi

  block --gitop "git add ." && git -c advice.statusHints=false status
    # Check if there's anything to commit
  if block --quiet "git diff --staged --quiet"; then
    warn "No changes to commit"
    return 0
  fi

  # ID + Date + Count per repository
  randid=$(head /dev/urandom | tr -dc A-Z0-9 | head -c 6)
  today=$(date "+%m-%d")
  repo_name=$(basename "$(git rev-parse --show-toplevel)")
  count_file="/tmp/${APP}_${repo_name}_${today}"

  if f_no "$count_file"; then
    echo "0" > "$count_file"
  fi
  count=$(cat "$count_file" 2>/dev/null || echo "0")
  # Ensure count is a number
  count=$(($count + 0))

  # Capture useful info if extended description needed
  if [[ "$extended_desc" == "true" ]]; then
    last_commit=$(git log -1 --format="%h - %s" 2>/dev/null || echo "No previous commits")
    last_commit_time=$(git log -1 --format="%cr" 2>/dev/null || echo "unknown")
  fi

  msg="$randid $(date "+%H:%M") #$(printf "%03d" $count)"

  # Add custom description if provided
  if [[ -n "$custom_desc" ]]; then
    msg="$msg

feat: $custom_desc"
  fi

  # If -l option, add extended description
  if [[ "$extended_desc" == "true" ]]; then
    extended_body="

Last commit: $last_commit ($last_commit_time)"
    msg="$msg$extended_body"
  fi

  #block --die "which node && echo 'Node found'"
  #block --die "which npm && npm --version"
  #block --warn "pgrep -f 'your-app-name' || echo 'Process not found'"
 
  #block --warn "pgrep -f 'codium' || echo 'No codium processes found'"
  #block --die "pgrep -f 'codium' | xargs -r kill -TERM || echo 'Nothing to kill'
  
  read -p "Commit and push to origin/master? [y/N] " confirm
  if [[ "$confirm" =~ ^[Yy]$ ]]; then
    if block --gitop "git commit -m \"$msg\""; then
      if block --gitop "git push origin master"; then
        # Increment count and write back to file
        count=$((count + 1))
        echo "$count" > "$count_file"
        info "Count incremented to $count"
      else
        die "Git push failed, count not incremented."
      fi
    else
      die "Git commit failed, count not incremented."
    fi
  else
    info "Aborted."
  fi
}

$APP "$@"
