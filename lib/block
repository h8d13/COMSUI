#!/bin/bash

# Colors are already sourced by main script, no need to import again
# Block utility - run commands with colored output
block() {

    local color_func="info"
    local quiet=false
    local die_on_fail=false
    local pre_print=""

    case "$1" in
        --info) color_func="info"; shift ;;
        --warn) color_func="warn"; shift ;;
        --gitop) color_func="gitop"; shift ;;
        --quiet) quiet=true; shift ;;
        --die) color_func="warn"; die_on_fail=true; shift ;;
        --pre) pre_print="$2"; shift 2 ;;
    esac

    # Show pre-print message if provided
    if s_set "$pre_print" && s_false "$quiet"; then
        $color_func "$pre_print"
    fi

    # Show command being executed (unless quiet)
    if s_false "$quiet"; then
        $color_func "$* ..."
    fi

    # Record start time (milliseconds)
    local start_time=$(t_timestamp)

    # Execute command and return exit code
    eval "$*"
    local exit_code=$?

    # Calculate execution time
    local end_time=$(t_timestamp)
    local duration_ms=$((end_time - start_time))
    local duration=$(printf "%d.%03d" $((duration_ms / 1000)) $((duration_ms % 1000)))

    # Show result (unless quiet)
    if s_false "$quiet"; then
        if [[ $exit_code -eq 0 ]]; then
            $color_func "Done in ${duration}s"
        else
            warn "Failed in ${duration}s"
        fi
    fi

    # Exit if die_on_fail is set and command failed
    if s_true "$die_on_fail" && [ $exit_code -ne 0 ]; then
        die "Command failed - exiting"
    fi

    return $exit_code
}

# Atom utility - run command with description (reuses block)
atom() {
    local desc="$1"
    shift

    # Parse color prefix from description
    case "$desc" in
        --warn:*) block --pre "${desc#--warn:}" --warn "$@" ;;
        --gitop:*) block --pre "${desc#--gitop:}" --gitop "$@" ;;
        --die:*) block --pre "${desc#--die:}" --die "$@" ;;
        *) block --pre "$desc" "$@" ;;
    esac
}